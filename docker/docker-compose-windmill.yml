version: "3.7"

services:
  database:
    extends:
      file: docker-compose.yml
      service: database
    volumes:
      - postgres-data:/var/lib/postgresql/data

  windmill_server:
    image: ghcr.io/windmill-labs/windmill:main
    pull_policy: always
    deploy:
      replicas: 1
    restart: unless-stopped
    expose:
      - 8000
    environment:
      - DATABASE_URL=${WINDMILL_DATABASE_URL}
      - MODE=server
    depends_on:
      - database

  ## This worker is specialized for "native" jobs. Native jobs run in-process and thus are much more lightweight than other jobs
  windmill_worker_native:
    # Use ghcr.io/windmill-labs/windmill-ee:main for the ee
    image: ghcr.io/windmill-labs/windmill:main
    pull_policy: always
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: "1"
          memory: 256M
    restart: unless-stopped
    environment:
      - DATABASE_URL=${WINDMILL_DATABASE_URL}
      - MODE=worker
      - WORKER_GROUP=native
      # - WORKER_TAGS=nativets,deno,go,python3,postgresql,flow,bash,dependency
    depends_on:
      - database

  windmill_worker:
    image: ghcr.io/windmill-labs/windmill:main
    pull_policy: always
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: "1"
          memory: 512M
    restart: unless-stopped
    environment:
      - DATABASE_URL=${WINDMILL_DATABASE_URL}
      - MODE=worker
      - WORKER_GROUP=default
    depends_on:
      - database
    # to mount the worker folder to debug, KEEP_JOB_DIR=true and mount /tmp/windmill
    volumes:
      # mount the docker socket to allow to run docker containers from within the workers
      # - /var/run/docker.sock:/var/run/docker.sock
      - worker_dependency_cache:/tmp/windmill/cache


  windmill_lsp:
    image: ghcr.io/windmill-labs/windmill-lsp:latest
    pull_policy: always
    restart: unless-stopped
    expose:
      - 3001
    volumes:
      - windmill_lsp_cache:/root/.cache

volumes:
  windmill_lsp_cache: null
  worker_dependency_cache: null
