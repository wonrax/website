services:
  database:
    image: postgres:15
    container_name: hhai-dev-pg
    restart: unless-stopped
    env_file:
      - ../.env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432

  vector:
    image: timberio/vector:0.36.1-distroless-libc
    container_name: hhai-dev-vector
    restart: unless-stopped
    env_file:
      - ../.env
    volumes:
      - ./vector/vector.toml:/etc/vector/vector.toml:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: --config /etc/vector/vector.toml

  caddy:
    image: caddy:2
    container_name: hhai-dev-caddy
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
      - 443:443/udp
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./.mount/www:/www
      - ./.mount/caddy-data/data:/data
      - ./.mount/caddy-data/config:/config
    extra_hosts:
      - "host.docker.internal:host-gateway"
    logging:
      driver: local
      options:
        max-size: 1g

  migrator:
    image: ghcr.io/wonrax/hhai-dev-migrator:latest
    container_name: hhai-dev-migrator
    build:
      context: ..
      dockerfile: docker/hhai-dev-migrator.Dockerfile
    env_file:
      - ../.env

  api:
    image: ghcr.io/wonrax/hhai-dev-api:latest
    container_name: hhai-dev-api
    restart: unless-stopped
    build:
      context: ..
      dockerfile: docker/hhai-dev-api.Dockerfile
    env_file:
      - ../.env

  www:
    image: ghcr.io/wonrax/hhai-dev-www:latest
    container_name: hhai-dev-www
    build:
      context: ..
      dockerfile: docker/hhai-dev-www.Dockerfile
    volumes:
      - ./.mount/www/hhai.dev:/.mount

  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    restart: unless-stopped
    environment:
      ENV: prod
      WEBUI_SECRET_KEY: ${OPEN_WEBUI_SECRET_KEY}
      DATABASE_URL: ${OPEN_WEBUI_DATABASE_URL}
      WEBUI_AUTH: true
      ENABLE_SIGNUP: true
      ENABLE_LOGIN_FORM: true
      DEFAULT_USER_ROLE: pending
      ENABLE_MESSAGE_RATING: false
      DATABASE_POOL_SIZE: 10
      ENABLE_OLLAMA_API: false
      # The two options below helps significantly reducing RAM usage (from
      # 600MB to 240MB)
      # https://docs.openwebui.com/tutorials/tips/reduce-ram-usage
      AUDIO_STT_ENGINE: openai
      RAG_EMBEDDING_ENGINE: ollama
    volumes:
      - ./.mount/open-webui:/app/backend/data

