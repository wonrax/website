name: Website container CI/CD
# Build apps into Docker images, push to
# GitHub container registry and deploy
# on host machine.

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

on:
  push:
    branches: ["main"]
    paths:
      - "web/**"
      - "api/**"
      - "docker/**"
      - "package.json"
      - "package-lock.json"
      - "Cargo.toml"
      - "Cargo.lock"
      - "turbo.json"

  workflow_dispatch:

jobs:
  files-changed:
    name: Detect which files' changed
    runs-on: ubuntu-latest
    timeout-minutes: 3
    # Map a step output to a job output
    outputs:
      www: ${{ steps.changes.outputs.www }}
      backend: ${{ steps.changes.outputs.api }}
      migrate: ${{ steps.changes.outputs.migrate }}
      # Config related changes that do not require a build but trigger a deploy
      deploy: ${{ steps.changes.outputs.deploy }}
    steps:
      - uses: actions/checkout@v4

      - name: Check for file changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          token: ${{ github.token }}
          filters: |
            www:
              - "web/**"
              - "docker/www.Dockerfile"
              - "package.json"
              - "package-lock.json"
            api:
              - "api/src/**"
              - "api/Cargo.toml"
              - "Cargo.lock"
              - "docker/api.Dockerfile"
            migrate:
              - "api/migrations/**"
              - "api/schema.prisma"
              - "docker/schema-migrator.Dockerfile"
            deploy:
              - "docker/Caddyfile"
              - "docker/docker-compose*.yml"
              - "docker/*.Dockerfile"
              - "docker/vector/vector.toml"

  # test-backend:
  #   name: Test backend API
  #   needs: files-changed
  #   if: ${{ needs.files-changed.outputs.backend == 'true' }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: dtolnay/rust-toolchain@stable
  #     - run: cargo test --workspace --all-features

  build-and-push-www:
    name: Build www
    needs: files-changed
    if: ${{ needs.files-changed.outputs.www == 'true' }}
    uses: ./.github/workflows/container-ci.yml
    with:
      name: Website frontend
      tags: ghcr.io/wonrax/wrx-sh-www:latest
      dockerfile: docker/www.Dockerfile
    secrets: inherit

  build-and-push-backend:
    name: Build API (Nix)
    needs: [files-changed]
    if: ${{ needs.files-changed.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - name: Build API Docker image with Nix
        run: nix build .#dockerApi
      - name: Load and push API image
        run: docker load < ./result && docker push ghcr.io/wonrax/wrx-sh-api:latest

  build-and-push-migrate:
    name: Build database migrator
    needs: files-changed
    if: ${{ needs.files-changed.outputs.migrate == 'true' }}
    uses: ./.github/workflows/container-ci.yml
    with:
      name: Database migrator
      tags: ghcr.io/wonrax/wrx-sh-migrator:latest
      dockerfile: docker/schema-migrator.Dockerfile
    secrets: inherit

  deploy:
    name: Deploy
    uses: ./.github/workflows/deploy.yml
    needs:
      - build-and-push-www
      - build-and-push-backend
      - build-and-push-migrate
      - files-changed
    # According to GHA docs, this job won't run if one of its needs is
    # skipped. We want to deploy if at least one needed job is successful
    # and no jobs fail. We don't care about skipping job because we don't
    # want to re-build and re-deploy unchanged code.
    # Related links:
    # https://docs.github.com/en/actions/learn-github-actions/expressions#failure
    # https://docs.github.com/en/actions/learn-github-actions/contexts#needs-context
    if: ${{ !failure() && (
      needs.build-and-push-backend.result == 'success' ||
      needs.build-and-push-www.result == 'success' ||
      needs.build-and-push-migrate.result == 'success' ||
      needs.files-changed.outputs.deploy == 'true' ) }}
    secrets: inherit
