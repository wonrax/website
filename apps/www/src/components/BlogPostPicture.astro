---
import { Picture, Image } from "@astrojs/image/components";
import path from "path";

// https://github.com/withastro/astro/issues/3373#issuecomment-1405026030
function dynamicViteAssetImport(filename: path.ParsedPath) {
  const name = filename.name;
  const ext = filename.ext;
  switch (ext) {
    case ".webp":
      return import(`../assets/${name}.webp`);
    case ".jpg":
      return import(`../assets/${name}.jpg`);
    case ".png":
      return import(`../assets/${name}.png`);
    case ".svg":
      return import(`../assets/${name}.svg`);
    case ".gif":
      return import(`../assets/${name}.gif`);
    case ".avif":
      return import(`../assets/${name}.avif`);
    case ".jpeg":
      return import(`../assets/${name}.jpeg`);
    default:
      return import(`../assets/${name}.jpg`);
  }
}

const maxSize = "(max-width: 1920px) 100vw, 1920px"; // the max width of the container
const { src, alt } = Astro.props;
let sizes = "(max-width: 700px) 100vw, 700px";
if ("feature-type" in Astro.props) {
  switch (Astro.props["feature-type"]) {
    case "lg":
      sizes = maxSize;
      break;
    case "sm": // 900px wide
      sizes = "(max-width: 900px) 100vw, 900px";
      break;
    default:
      sizes = maxSize;
  }
}
const filename = path.parse(src);
const image = await dynamicViteAssetImport(filename);
---

{
  filename.ext === ".svg" ? (
    <Image
      src={image.default}
      alt={alt}
      style={{
        width: "100%",
        "aspect-ratio": `${image.default.width} / ${image.default.height}`,
      }}
    />
  ) : (
    <Picture
      src={image.default}
      alt={alt}
      widths={[400, 800, 1200, 1600, 2000, 2600, 3200]}
      sizes={sizes}
      formats={["png"]}
      style={{
        width: "100%",
        "aspect-ratio": `${image.default.width} / ${image.default.height}`,
      }}
    />
  )
}
