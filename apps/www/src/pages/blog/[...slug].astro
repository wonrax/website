---
import { CollectionEntry, getCollection } from "astro:content";
import BlogPostLayout from "../../layouts/BlogPost.astro";
import Picture from "../../components/BlogPostPicture.astro";
import MaxWidth from "../../components/MaxWidth.astro";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}
type Props = CollectionEntry<"blog">;
const post: Props = Astro.props;
const { Content } = await post.render();
const components = {
  img: Picture,
  maxwidth: MaxWidth,
};
---

<BlogPostLayout {...post.data}>
  <div class="flex flex-col items-center gap-4 max-w-[900px] mx-auto pt-8">
    <div class="w-full flex flex-row gap-2 rounded-lg">
      <a href="/" class="text-gray-700 font-bold w-fit">hhai.dev</a>
      <h3 class="text-gray-700 font-medium">/</h3>
      <a href="/blog" class="text-gray-700 font-medium">blog</a>
    </div>
    <div class="w-full">
      <h1 class="font-medium text-4xl mb-4 tracking-tight leading-tight">
        {post.data.title}
      </h1>
      <p class="mb-0 font-medium">Ha Huy Long Hai</p>
      <p class="mt-0 mb-0">
        {post.data.updated?.toLocaleDateString("vi-VN")}
      </p>
    </div>
    <div class="w-full h-[1px] mt-4 bg-gray-200"></div>
  </div>
  <article
    class="max-w-[1920px] prose mx-auto py-16 prose-pre:px-0 prose-pre:my-0 prose-pre:bg-transparent prose-img:rounded-2xl prose-a:break-words"
  >
    <div class="flex flex-col items-center max-w-full mx-4">
      <Content components={components} />
    </div>
  </article>
</BlogPostLayout>

<style is:global>
  /* <!-- TODO move to using tailwind or smth, add toggle for line numbers --> */
  .feature-sm {
    @apply max-w-[900px] w-full;
  }

  .feature-lg {
    width: 100%;
  }

  pre[data-theme="dark"],
  div[data-rehype-pretty-code-title][data-theme="dark"],
  code[data-theme="dark"] {
    display: none;
  }

  div[data-rehype-pretty-code-fragment] code {
    display: grid;
    counter-reset: line;
    @apply p-0 m-0; /* reset inline code styles */
  }

  div[data-rehype-pretty-code-fragment]
    code[data-line-numbers]
    > .line::before {
    counter-increment: line;
    content: counter(line);

    /* Other styling */
    width: 1rem;
    @apply ml-2 mr-3 text-gray-400 text-right inline-block;
  }

  div[data-rehype-pretty-code-fragment] code:not([data-line-numbers]) .line {
    @apply pl-4;
  }

  div[data-rehype-pretty-code-fragment] code > .line {
    /* make up for the highlighted leftmost border width */
    @apply border-l-2 border-transparent;
  }
  div[data-rehype-pretty-code-fragment] code > .line.highlighted {
    @apply border-gray-600 border-l-2;
    @apply bg-gray-900 bg-opacity-5;
  }

  code[data-line-numbers-max-digits="2"] > .line::before {
    width: 2rem;
  }

  code[data-line-numbers-max-digits="3"] > .line::before {
    width: 3rem;
  }

  div[data-rehype-pretty-code-fragment] {
    @apply bg-gray-100 mt-6 border border-gray-300 rounded-lg;
  }

  div[data-rehype-pretty-code-title] {
    @apply bg-gray-50 shadow-sm font-sans font-medium text-sm text-gray-800 px-4 h-8;
    @apply flex flex-col justify-center ml-2;
    @apply w-fit rounded-b-md border border-t-0 border-gray-300;
  }

  div[data-rehype-pretty-code-fragment] code .line .word {
    @apply bg-gray-900 bg-opacity-5 px-1 py-0.5 -mx-1 rounded-md;
    @apply border border-gray-900 border-opacity-10;
  }

  code {
    @apply bg-gray-100 border border-gray-300 px-1 py-0.5 rounded-md;
  }
</style>
