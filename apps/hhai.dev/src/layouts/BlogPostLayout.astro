---
import { CommentSection } from "@/components/BlogComments/CommentSection";
import * as Sheet from "@/components/Sheet/Sheet";
import "@fontsource/inconsolata/500.css";
import "katex/dist/katex.css";
import TableOfContents from "../components/TableOfContents.astro";
import BlogRouteLayout from "./BlogRouteLayout.astro";
import { ArrowUp, MessagesSquare, X } from "lucide-solid";

export type Frontmatter = {
  title: string;
  description: string;
  published: string;
  updated: string;
  tags: string[];
  isDraft?: boolean;
  hidden?: boolean;
  ogImageUrl?: string;
};

export type Heading = {
  text: string;
  slug: string;
  depth: number;
};

type Props = {
  frontmatter: Frontmatter;
  headings: Heading[];
};

const post = Astro.props.frontmatter;
const headings = Astro.props.headings;
---

<BlogRouteLayout
  seoProps={{ title: post.title, description: post.description }}
>
  <div class="right-sidebar">
    <div class="right-sidebar-content">
      {
        headings.length ? (
          <>
            <TableOfContents headings={headings} />
            <button id="go-to-top" aria-label="Go to top of the page">
              <ArrowUp size={16} />
            </button>
          </>
        ) : null
      }
      <!-- <div class="mt-6">
          <ScrollToTopButton />
        </div> -->
    </div>
  </div>
  <div class="post-header">
    <h1>
      {post.title}
    </h1>
    <div class="separator">
      <span class="article-date">
        {
          new Date(post.published).toLocaleDateString("en-UK", {
            year: "numeric",
            month: "long",
            day: "numeric",
          })
        }
      </span>
      <span class="separator-line"></span>
      {
        post.tags &&
          post.tags.map((tag) => <span class="post-tag">#{tag}</span>)
      }
    </div>
    <Sheet.Trigger class="open-discussion" client:load>
      <MessagesSquare size={16} strokeWidth={1.5} />
      View discussions
    </Sheet.Trigger>
  </div>
  {
    post.isDraft ? (
      <aside class="callout callout-warning">
        <div class="callout-title">Draft</div>
        <div class="callout-content">
          <p>This post is a draft and is not yet ready for public viewing.</p>
        </div>
      </aside>
    ) : null
  }
  <slot />
  <Sheet.Root client:load>
    <Sheet.Trigger
      class="close-button"
      aria-label="Close comment section"
      client:load
    >
      <X strokeWidth={1.5} />
    </Sheet.Trigger>
    <CommentSection client:only="solid-js" />
  </Sheet.Root>
</BlogRouteLayout>

<style lang="scss" is:global>
  :root {
    --bg-aside: var(--bg-additive-lighter);
    --bg-code-block: var(--white-2);
    --bg-code-inline: var(--bg-additive-light);
    --bg-code-block-elevated-active: var(--white-1);
    --bg-code-block-elevated-hover: var(--white-3);
    --bg-code-block-highlighted-line: var(--bg-additive-light);
    --code-block-accent: var(--grey-5);
    --text-code-block-line-number: var(--grey-2);

    @media (prefers-color-scheme: dark) {
      --bg-aside: var(--bg-additive-light);
      --bg-code-block: var(--bg-additive-light);
      --bg-code-inline: var(--bg-additive-light);
      --bg-code-block-elevated-active: var(--bg-additive-medium);
      --bg-code-block-elevated-hover: var(--bg-additive-light);
      --bg-code-block-highlighted-line: var(--bg-additive-light);
      --code-block-accent: var(--grey-1);
      --text-code-block-line-number: var(--grey-4);
    }
  }

  .blog-container {
    font-size: 16px;

    .post-tag {
      display: inline-block;
      // padding: 4px 8px;
      border-radius: 6px;
      margin-left: 8px;
      // background-color: #f4f4f4;
      font-size: 14px;
      font-weight: var(--font-weight-medium);
      color: var(--text-body-medium);
      // margin: 0 4px 4px 0;
    }

    .article-date {
      font-size: 14px;
      font-weight: var(--font-weight-medium);
      color: var(--text-body-medium);
      white-space: nowrap;
      margin-right: 8px;
    }

    figure {
      margin: 0 auto;
    }
  }

  .blog-container {
    li {
      color: var(--text-body-heavy);
      margin: 8px 0;
      line-height: 1.65em;
      letter-spacing: -0.02em;
      font-weight: var(--font-weight-normal);

      p {
        margin: 0;
      }
    }
  }

  .blog-container {
    word-wrap: break-word;
    margin-top: 32px;

    & > * {
      margin-left: auto;
      margin-right: auto;
    }

    @media (min-width: 1024px) {
      padding-left: 0;
      padding-right: 0;
    }

    .feature {
      img {
        width: 100%;
      }
    }

    /* <!-- TODO move to using tailwind or smth, add toggle for line numbers --> */
    .feature-sm {
      grid-column: 2 / 5;
    }

    .feature-md {
      z-index: 10;
      grid-column: 2 / 6;

      @media (max-width: 1100px) {
        grid-column: 2 / 5;
      }
    }

    .image-caption {
      margin: 12px;
      font-weight: var(--font-weight-medium);
      color: var(--text-body-medium);
      font-size: 14px;
      display: flex;
      flex-direction: row;
      justify-content: space-between;

      code {
        font-size: 15px;
      }
    }

    .icon.icon-link {
      opacity: 0;
    }

    h1:hover .icon.icon-link,
    h2:hover .icon.icon-link,
    h3:hover .icon.icon-link,
    h4:hover .icon.icon-link,
    h5:hover .icon.icon-link,
    h6:hover .icon.icon-link {
      opacity: 1;
    }

    h1[id],
    h2[id],
    h3[id],
    h4[id],
    h5[id],
    h6[id] {
      scroll-margin-top: 24px;
    }

    .icon.icon-link::after {
      content: "#";
      margin-left: 4px;
    }

    .feature-lg {
      z-index: 10;
      grid-column: 1 / -1;
      box-sizing: border-box;
    }

    .feature-code {
      grid-column: 2 / 5;
      margin: 24px auto;
    }

    .feature-table {
      grid-column: 2 / 5;
      width: fit-content;
      margin: 32px auto;
      border-radius: 12px;
      overflow-y: auto;
    }

    table {
      font-size: 15px;
      border-collapse: collapse;
      border-spacing: 0;

      tbody {
        color: var(--text-body-medium);
      }

      td {
        white-space: break-spaces;
        overflow-wrap: break-word;
        padding: 8px 16px;
        border-top: 1px solid var(--bg-additive-medium);
        font-weight: var(--font-weight-normal);
      }

      th {
        padding: 8px 16px;
        font-weight: var(--font-weight-medium);
        color: var(--text-body-heavy);
      }
    }

    p {
      margin: 16px 0;
      line-height: 1.65em;
      color: var(--text-body-heavy);
      letter-spacing: -0.01em;
      font-weight: var(--font-weight-normal);
    }

    ul {
      color: var(--text-body-heavy);
    }

    h1 {
      // font-family: IBM Plex Serif;
      font-size: 32px;
      font-weight: var(--font-weight-medium);
      // font-style: italic;
      margin: 24px 0 16px 0;
      line-height: 1.35em;
      letter-spacing: -0.02em;
      color: var(--text-heading);
    }

    h2 {
      // font-family: IBM Plex Serif;
      font-size: 24px;
      font-weight: var(--font-weight-medium);
      // font-style: italic;
      margin: 24px 0 16px 0;
      line-height: 1.35em;
      letter-spacing: -0.02em;
      color: var(--text-heading);
    }

    h3 {
      font-size: 20px;
      font-weight: var(--font-weight-medium);
      margin: 24px 0 16px 0;
      line-height: 1.35em;
      letter-spacing: -0.02em;
      color: var(--text-heading);
    }

    a {
      text-decoration: underline;
      color: var(--text-body-link);
      &:visited {
        color: var(--text-body-link-visited);
      }
    }

    .feature-aside {
      grid-column: 5 / 6;
      font-style: italic;
      align-self: end;
      z-index: 10;

      @media (max-width: 1100px) {
        grid-column: 3 / 4;
        transform: unset;
      }

      aside {
        background-color: var(--bg-color);
        box-sizing: border-box;
        margin: 0 auto;
        padding: 8px 0;
        box-shadow: 0 0 16px 16px var(--bg-color);
        border-top: solid 1px var(--bg-additive-medium);
        border-bottom: solid 1px var(--bg-additive-medium);
        height: fit-content;

        @media (max-width: 1100px) {
          position: relative;
        }

        p {
          font-size: 14px;
          color: var(--text-body-medium);
          margin-top: 16px;
          margin-bottom: 0;

          &:nth-child(1) {
            margin-top: 0;
          }
        }

        code {
          font-size: 14px;
        }
      }
    }

    img {
      display: block;
      height: auto;
      border-radius: 12px;
      margin: 0 auto;
    }
  }

  .feature-callout {
    grid-column: 2 / 5;
    margin-top: 24px;
  }

  .callout {
    display: block;
    padding: 40px 40px 24px 40px;
    border-radius: 12px;

    .callout-title {
      font-size: 13px;
      font-weight: var(--font-weight-medium);
      text-transform: uppercase;
    }

    .callout-content {
      margin-top: 8px;
    }

    p {
      font-size: 16px;
    }
  }

  .callout.callout-note {
    background-color: var(--info-light);

    .callout-title {
      color: var(--info-medium);
    }

    p {
      color: var(--info-heavy);
    }

    a {
      color: var(--info-heavy);
      &:visited {
        color: var(--info-medium);
      }
    }
  }

  .callout.callout-warning {
    background-color: var(--warning-light);

    .callout-title {
      color: var(--warning-medium);
    }

    p {
      color: var(--warning-heavy);
    }

    a {
      color: var(--warning-heavy);
      &:visited {
        color: var(--warning-medium);
      }
    }
  }

  .post-header {
    box-sizing: border-box;
    margin-left: 0;

    h1 {
      font-size: 28px;
      font-weight: var(--font-weight-medium);
      margin: 16px 0;
      color: var(--text-heading);
      letter-spacing: -0.02em;
    }

    .separator {
      display: flex;
      flex-direction: row;
      align-items: center;
      margin-top: 16px;

      .separator-line {
        height: 1px;
        background-color: var(--text-body-medium);
        width: 12px;
        display: inline-block;
      }
    }
  }

  .right-sidebar {
    grid-column-start: 5;
    grid-column-end: 6;
    grid-row-start: 3;
    height: 0;
    position: sticky;
    top: 24px;
    margin-left: 0;

    @media (max-width: 1100px) {
      display: none;
    }

    .right-sidebar-content {
      overflow-y: auto;
      max-height: 90vh;
      padding: 2px;
      display: flex;
      flex-direction: column;
      gap: 8px;

      @media (min-width: 1100px) {
        width: 240px;
      }
    }
  }

  // Code block stylying
  .blog-container figure[data-rehype-pretty-code-figure] {
    margin: 0 auto;
    border-radius: 12px;
    background-color: var(--bg-code-block);
    overflow: hidden;
    border: solid 1px var(--bg-additive-light);
    box-shadow: 0 4px 4px 0px rgba($color: black, $alpha: 0.025);

    pre {
      overflow-x: auto;
      line-height: 1.4em;
      margin: 0;
      padding: 16px 0;
    }

    code {
      font-size: 16px;
      display: grid;
      counter-reset: line;
      margin: 0;
      padding: 0;
      background-color: transparent;
      width: 100%;

      & > .code-block-line {
        /* make up for the highlighted leftmost border width */
        border-left: solid 2px transparent;

        padding-top: 0;
        padding-right: 8px;
        padding-bottom: 0;
        padding-left: 0;

        [data-highlighted-chars] {
          background-color: var(--bg-code-block-highlighted-line);
          padding: 2px 4px;
          margin: 0 -4px;
          border-radius: 6px;
        }
      }

      & > .code-block-line.highlighted {
        background-color: var(--bg-code-block-highlighted-line);
        border-left: solid 2px var(--code-block-accent);
      }

      &[data-line-numbers-max-digits="2"] > .code-block-line::before {
        width: 2rem;
      }

      &[data-line-numbers-max-digits="3"] > .code-block-line::before {
        width: 3rem;
      }

      &[data-line-numbers] > .code-block-line::before {
        counter-increment: line;
        content: counter(line);

        display: inline-block;
        width: 1rem;
        margin-left: 16px;
        margin-right: 24px;
        color: var(--text-code-block-line-number);
        text-align: right;
      }

      &:not([data-line-numbers]) > .code-block-line {
        padding-left: 16px;
      }
    }

    .code-block-title {
      display: flex;
      flex-direction: column;
      justify-content: center;
      padding: 0 16px;
      height: 30px;
      width: fit-content;
      background-color: var(--bg-code-block-elevated-active);
      color: var(--text-body-heavy);
      box-shadow: 0 1px 3px 0px rgba($color: black, $alpha: 0.05);
      font-size: 14px;
      font-weight: var(--font-weight-normal);
      margin-left: 16px;
      border-radius: 0 0 8px 8px;
      border: solid 1px var(--bg-additive-medium);
      border-top: none;
    }
  }

  .blog-container .code-group {
    .code-group-tabs {
      display: flex;
      padding-left: 16px;
      padding-right: 16px;
      padding-bottom: 4px;
      overflow-y: visible;
      overflow-x: auto;

      // TODO make this a button for accessibility
      .code-block-title {
        margin-left: 0px;
        cursor: pointer;
        background-color: transparent;

        &.active {
          background-color: var(--bg-code-block-elevated-active);
          color: var(--text-body-heavy);
        }

        &:not(.active) {
          box-shadow: none;
          border: solid 1px transparent;
          border-top: none;

          &:hover {
            background-color: var(--bg-code-block-elevated-hover);
          }
        }
      }
    }
  }

  code {
    font-size: 16px;
  }

  // TODO I don't understand how this works to toggle dark mode
  code[data-theme*=" "],
  code[data-theme*=" "] span {
    color: var(--shiki-light);
    background-color: var(--shiki-light-bg);
  }

  @media (prefers-color-scheme: dark) {
    code[data-theme*=" "],
    code[data-theme*=" "] span {
      color: var(--shiki-dark);
      background-color: var(--shiki-dark-bg);
    }
  }

  // inline code
  .blog-container span[data-rehype-pretty-code-figure],
  :not(span[data-rehype-pretty-code-figure]) > code {
    padding: 2px 4px;
    background-color: var(--bg-code-inline);
    border-radius: 4px;
  }

  .katex-display {
    overflow-y: auto;
    color: var(--text-body-heavy);
  }

  button {
    background-color: transparent;
    color: var(--text-body-heavy);
    border-radius: 6px;
    font-size: 14px;
    cursor: pointer;
    border: none;
    outline: none;
    padding: 6px 12px;
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 6px;
    width: fit-content;
    background-color: var(--bg-additive-light);

    &:focus {
      outline: var(--bg-additive-medium) solid 2px;
    }

    &.primary {
      font-weight: var(--font-weight-medium);

      &:hover {
        background-color: var(--bg-additive-medium);
      }
    }

    &.ghost {
      background-color: transparent;
      &:hover {
        background-color: var(--bg-additive-light);
      }
    }
  }

  button.open-discussion {
    margin-top: 16px;

    svg {
      margin-top: 2px;
    }
  }
</style>

<script>
  const observer = new IntersectionObserver(
    (entries) => {
      let currentId: string | null = null;
      for (const entry of entries) {
        const id = entry.target.getAttribute("id");
        if (entry.isIntersecting) {
          document
            .querySelector(`.right-sidebar .table-of-content a[href="#${id}"]`)
            ?.parentElement?.classList.add("active");
          currentId = id;
          break;
        }
      }
      if (currentId)
        document
          .querySelectorAll(".right-sidebar .table-of-content .active a")
          .forEach((entry) => {
            const id = entry.getAttribute("href");
            if (id !== "#" + currentId) {
              entry.parentElement?.classList.remove("active");
            }
          });
    },
    {
      rootMargin: "0px 0px -70% 0px",
      threshold: 1,
    }
  );

  // Track all sections that have an `id` applied
  document.querySelectorAll("h1[id],h2[id],h3[id]").forEach((section) => {
    observer.observe(section);
  });

  document.querySelector("#go-to-top")?.addEventListener("click", () => {
    window.scrollTo({
      top: 0,
      behavior: "smooth",
    });
  });
</script>
