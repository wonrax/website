---
import TableOfContents from "../components/TableOfContents.astro";
import BlogRouteLayout from "./BlogRouteLayout.astro";

export type Frontmatter = {
  title: string;
  description: string;
  published: string;
  updated: string;
  tags: string[];
};

export type Heading = {
  text: string;
  slug: string;
  depth: number;
};

type Props = {
  frontmatter: Frontmatter;
  headings: Heading[];
};

const post = Astro.props.frontmatter;
const headings = Astro.props.headings;
---

<BlogRouteLayout title={post.title} description={post.description}>
  <main class="blog-post-main">
    <div class="right-sidebar">
      <div class="right-sidebar-content">
        {
          headings.length ? (
            <>
              <h3>On this page</h3>
              <TableOfContents headings={headings} />
            </>
          ) : null
        }
        <!-- <div class="mt-6">
          <ScrollToTopButton />
        </div> -->
      </div>
    </div>
    <article class="article">
      <div class="post-header">
        <h1>
          {post.title}
        </h1>
        <div class="separator">
          <span class="article-date">
            {
              new Date(post.published).toLocaleDateString("en-UK", {
                year: "numeric",
                month: "long",
                day: "numeric",
              })
            }
          </span>
          <span class="separator-line"></span>
          {
            post.tags &&
              post.tags.map((tag) => <span class="post-tag">#{tag}</span>)
          }
        </div>
      </div>
      <div class="article-body">
        <slot />
      </div>
    </article>
  </main>
</BlogRouteLayout>

<style lang="scss" is:global>
  .blog-post-main {
    display: flex;
    flex-direction: row;
    gap: 64px;
    max-width: 100%;
    justify-content: center;
  }

  .right-sidebar {
    display: none;

    @media (min-width: 1280px) {
      display: block;
      order: 2;
      align-self: stretch;
    }

    .right-sidebar-content {
      position: sticky;
      top: 24px;

      h3 {
        font-size: 18px;
        font-weight: 500;
        color: #333;
      }

      @media (min-width: 1280px) {
        width: 240px;
      }
    }
  }

  .article {
    font-size: 18px;
    max-width: 100%;

    @media (min-width: 1280px) {
      max-width: 800px;
    }

    .post-tag {
      display: inline-block;
      // padding: 4px 8px;
      border-radius: 6px;
      margin-left: 8px;
      // background-color: #f4f4f4;
      font-size: 14px;
      font-weight: 500;
      color: #666;
      // margin: 0 4px 4px 0;
    }

    .article-date {
      font-size: 14px;
      font-weight: 500;
      color: #666;
      white-space: nowrap;
      margin-right: 8px;
    }

    figure {
      margin: 32px 0;
    }
  }

  .article .post-header {
    max-width: 700px;
    margin: 0 auto;
    box-sizing: border-box;

    h1 {
      font-size: 42px;
      font-weight: 500;
      margin: 16px 0;
      color: #333;
      letter-spacing: -0.01em;
    }

    .separator {
      display: flex;
      flex-direction: row;
      align-items: center;
      margin-top: 16px;

      .separator-line {
        height: 1px;
        background-color: #666;
        width: 100%;
        display: inline-block;
      }
    }

    @media (max-width: 800px) {
      padding: 0 32px;
    }
  }

  .article .article-body {
    li {
      margin: 16px 0;
      line-height: 1.65em;

      p {
        margin: 0;
      }
    }
  }

  .article .article-body {
    // padding-left: 16px;
    // padding-right: 16px;
    padding-bottom: 128px;
    // display: flex;
    // flex-direction: column;
    // align-items: center;
    word-wrap: break-word;

    & > * {
      margin-left: auto;
      margin-right: auto;
    }

    @media (min-width: 1024px) {
      padding-left: 0;
      padding-right: 0;
    }

    .reading-line-width {
      max-width: 100%;
      width: 700px;
      box-sizing: border-box;

      @media (max-width: 800px) {
        padding: 0 32px;
      }
    }

    /* <!-- TODO move to using tailwind or smth, add toggle for line numbers --> */
    .feature-sm {
      width: 100%;
      max-width: 800px;
      box-sizing: border-box;

      @media (max-width: 1280px) {
        padding: 0 16px;
      }
    }

    .image-caption {
      margin: 12px;
      font-weight: 500;
      color: #666;
      font-size: 14px;

      code {
        font-size: 13px;
      }
    }

    .icon.icon-link {
      opacity: 0;
    }

    h1:hover .icon.icon-link,
    h2:hover .icon.icon-link,
    h3:hover .icon.icon-link,
    h4:hover .icon.icon-link,
    h5:hover .icon.icon-link,
    h6:hover .icon.icon-link {
      opacity: 1;
    }

    h1[id],
    h2[id],
    h3[id],
    h4[id],
    h5[id],
    h6[id] {
      scroll-margin-top: 24px;
    }

    .icon.icon-link::after {
      content: "#";
      margin-left: 4px;
    }

    .feature-lg {
      z-index: 10;
      position: relative;
      max-width: 1104px;
      width: 1104px;
      box-sizing: border-box;

      @media (max-width: 1280px) {
        padding: 0 8px;
        max-width: 100%;
      }
    }

    .feature-code {
      width: 100%;
      max-width: 800px;
      box-sizing: border-box;

      @media (max-width: 1280px) {
        padding: 0 16px;
      }
    }

    .feature-table {
      width: fit-content;
      max-width: 100%;
      margin: 0 auto;
      border-radius: 6px;
      border: 1px solid #dddddd;
      overflow-y: auto;
    }

    table {
      font-size: 15px;
      border-collapse: collapse;
      border-spacing: 0;

      tbody {
        color: #333;
      }

      td {
        white-space: break-spaces;
        overflow-wrap: break-word;
        padding: 8px 16px;
        border-top: 1px solid #dddddd;
      }

      th {
        padding: 8px 16px;
      }
    }

    p {
      margin: 16px 0;
      line-height: 1.65em;
      color: #333;
    }

    ul {
      color: #333;
    }

    h1 {
      font-size: 32px;
      font-weight: 500;
      margin: 32px 0 16px 0;
    }

    h2 {
      font-size: 24px;
      font-weight: 500;
      margin: 48px 0 24px 0;
    }

    h3 {
      font-size: 20px;
      font-weight: 500;
      margin: 32px 0 16px 0;
    }

    a,
    a:visited {
      color: #dd0000;
    }
  }

  // Code block stylying
  .article .article-body div[data-rehype-pretty-code-fragment] {
    margin-top: 24px;
    border: 1px solid #dddddd;
    border-radius: 12px;

    pre {
      overflow-x: auto;
      line-height: 1.65em;
      margin: 0;
      padding: 16px 0;
    }

    code {
      display: grid;
      counter-reset: line;
      padding: 0;
      margin: 0;
      background-color: transparent;

      & > .code-block-line {
        /* make up for the highlighted leftmost border width */
        border-left: solid 2px transparent;

        [data-highlighted-chars] {
          background-color: rgba($color: #000000, $alpha: 0.05);
          padding: 2px 4px;
          margin: 0 -4px;
          border-radius: 6px;
          // border: solid 1px rgba($color: #000000, $alpha: 0.1);
        }
      }

      & > .code-block-line.highlighted {
        background-color: rgba($color: #000000, $alpha: 0.05);
        border-left: solid 2px #333;
      }

      &[data-line-numbers-max-digits="2"] > .code-block-line::before {
        width: 2rem;
      }

      &[data-line-numbers-max-digits="3"] > .code-block-line::before {
        width: 3rem;
      }

      &[data-line-numbers] > .code-block-line::before {
        counter-increment: line;
        content: counter(line);

        display: inline-block;
        width: 1rem;
        margin: 0 12px;
        color: #888;
        text-align: right;
      }

      &:not([data-line-numbers]) > .code-block-line {
        padding-left: 16px;
      }
    }

    .code-block-title {
      display: flex;
      flex-direction: column;
      justify-content: center;
      background-color: white;
      padding: 0 16px;
      height: 32px;
      width: fit-content;
      font-size: 15px;
      margin-left: 16px;
      box-shadow: 0 1px 2px 0 rgba($color: #000000, $alpha: 0.05);
      border-radius: 0 0 8px 8px;
      border: solid 1px #ddd;
      border-top: none;
    }
  }

  code {
    font-size: 15px;
  }

  .article .article-body span[data-rehype-pretty-code-fragment],
  :not(span[data-rehype-pretty-code-fragment]) > code {
    padding: 2px 4px;
    background-color: rgba($color: #000000, $alpha: 0.05);
    border-radius: 4px;
  }

  // code syntax highlighting
  :root {
    --shiki-color-text: #000;
    --shiki-color-background: #333333;
    --shiki-token-constant: #660000;
    --shiki-token-string: #770000;
    --shiki-token-comment: #880000;
    --shiki-token-keyword: #6e1111;
    --shiki-token-parameter: #aa0000;
    --shiki-token-function: #bb0000;
    --shiki-token-string-expression: #cc0000;
    --shiki-token-punctuation: #dd0000;
    --shiki-token-link: #ee0000;
  }
</style>

<script>
  const observer = new IntersectionObserver(
    (entries) => {
      let currentId: string | null = null;
      for (const entry of entries) {
        const id = entry.target.getAttribute("id");
        if (entry.isIntersecting) {
          document
            .querySelector(`.right-sidebar .table-of-content a[href="#${id}"]`)
            ?.parentElement?.classList.add("active");
          currentId = id;
          break;
        }
      }
      if (currentId)
        document
          .querySelectorAll(".right-sidebar .table-of-content .active a")
          .forEach((entry) => {
            const id = entry.getAttribute("href");
            if (id !== "#" + currentId) {
              entry.parentElement?.classList.remove("active");
            }
          });
    },
    {
      rootMargin: "0px 0px -70% 0px",
      threshold: 1,
    }
  );

  // Track all sections that have an `id` applied
  document.querySelectorAll("h1[id],h2[id],h3[id]").forEach((section) => {
    observer.observe(section);
  });
</script>
